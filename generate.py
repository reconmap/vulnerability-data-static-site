#!/usr/bin/env python3

import xml.etree.ElementTree as ET
import sys

years = [2021, 2019, 2020]

def addlink(url, title):
    return "<li><a href=\"%s\">%s</a></li>" % (url, title)

if len(sys.argv) != 3:
    print("Usage: %s input templateDir outputdir" % (sys.argv[0]), file=sys.stderr)
    sys.exit(1)

import jinja2

templateDir = sys.argv[1]
outputDir = sys.argv[2]

templateLoader = jinja2.FileSystemLoader(searchpath=templateDir)
templateEnv = jinja2.Environment(loader=templateLoader)

import re

vulnerabilityTemplate = templateEnv.get_template("vulnerability.jinja")

for year in years:
    inputFilename = 'allitems-cvrf-year-'+str(year)+'.xml'
    tree = ET.parse(inputFilename)
    root = tree.getroot()
    ns = {
        "v": "http://www.icasi.org/CVRF/schema/vuln/1.1"
    }
    vulns = root.iter('{http://www.icasi.org/CVRF/schema/vuln/1.1}Vulnerability')
    titles = []
    for vuln in vulns:
        title = vuln.find('v:Title', ns).text
        notes = vuln.find('v:Notes', ns)
        description = notes.findall('v:Note[@Type="Description"]', ns)[0].text

        if re.search('\*\* RESERVED \*\*', description, re.IGNORECASE):
            continue
        if re.search('\*\* REJECT \*\*', description, re.IGNORECASE):
            continue

        published = "N/A"
        try:
            published = notes.findall('v:Note[@Title="Published"]', ns)[0].text
        except:
            pass
        modified = "N/A"
        try:
            modified = notes.findall('v:Note[@Title="Modified"]', ns)[0].text
        except:
            pass

        references = vuln.findall('v:References/v:Reference', ns)
        aa = []
        for ref in references:
            url = ref.find('v:URL', ns).text
            description1 = ref.find('v:Description', ns).text
            aa.append([url, description1])
        reflist = "\n".join([addlink(a[0], a[1]) for a in aa])
        filename = "%s/%d/%s.html" % (outputDir, year, title,)
        data = vulnerabilityTemplate.render(title = title, description = description, published=published, modified=modified, references=reflist, year=year)
        with open(filename, "w") as file:
            file.write(data)

        titles.append(title)

    links = "\n".join([addlink(title + ".html", title) for title in titles])

    indexTemplate = templateEnv.get_template("year-index.jinja")
    data = indexTemplate.render(links=links, year=year)
    with open(outputDir + '/' + str(year) + '/index.html', 'w') as file:
        file.write(data)

indexTemplate = templateEnv.get_template("index.jinja")
data = indexTemplate.render(years = years)
with open(outputDir + '/index.html', 'w') as file:
    file.write(data)


